##### –î–ó –¢–µ–º–∞ 9. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–µ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è, –¢–µ–º–∞ 10. –í—Å—Ç—É–ø –¥–æ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏—Ö –æ–±—á–∏—Å–ª–µ–Ω—å


##### –¢–µ–º–∞ 10. –í—Å—Ç—É–ø –¥–æ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏—Ö –æ–±—á–∏—Å–ª–µ–Ω—å

### –ó–∞–≤–¥–∞–Ω–Ω—è 2

'''
–ù–∞–ø–∏—à—ñ—Ç—å Python-—Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î —Ç–µ–∫—Å—Ç —ñ–∑ –∑–∞–¥–∞–Ω–æ—ó URL-–∞–¥—Ä–µ—Å–∏, 
–∞–Ω–∞–ª—ñ–∑—É—î —á–∞—Å—Ç–æ—Ç—É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–ª—ñ–≤ —É —Ç–µ–∫—Å—Ç—ñ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –ø–∞—Ä–∞–¥–∏–≥–º–∏ MapReduce 
—ñ –≤—ñ–∑—É–∞–ª—ñ–∑—É—î —Ç–æ–ø-—Å–ª–æ–≤–∞ –∑ –Ω–∞–π–≤–∏—â–æ—é —á–∞—Å—Ç–æ—Ç–æ—é –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —É —Ç–µ–∫—Å—Ç—ñ.

–ü–æ–∫—Ä–æ–∫–æ–≤–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è

1. –Ü–º–ø–æ—Ä—Ç—É–π—Ç–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –º–æ–¥—É–ª—ñ (matplotlib —Ç–∞ —ñ–Ω—à—ñ).
2. –í—ñ–∑—å–º—ñ—Ç—å –∫–æ–¥ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó MapReduce –∑ –∫–æ–Ω—Å–ø–µ–∫—Ç—É.
3. –°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é visualize_top_words –¥–ª—è –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤.
4. –£ –≥–æ–ª–æ–≤–Ω–æ–º—É –±–ª–æ—Ü—ñ –∫–æ–¥—É –æ—Ç—Ä–∏–º–∞–π—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞ URL, –∑–∞—Å—Ç–æ—Å—É–π—Ç–µ MapReduce —Ç–∞ –≤—ñ–∑—É–∞–ª—ñ–∑—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏.
üëâüèº –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –¥–ª—è —Ç–æ–ø 10 –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –≤–∂–∏–≤–∞–Ω–∏—Ö —Å–ª—ñ–≤ –ø–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—ñ–∫–∞ –º–æ–∂–µ –≤–∏–≥–ª—è–¥–∞—Ç–∏ —Ç–∞–∫:

–ö—Ä–∏—Ç–µ—Ä—ñ—ó –ø—Ä–∏–π–Ω—è—Ç—Ç—è

- –ö–æ–¥ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î —Ç–µ–∫—Å—Ç —ñ–∑ –∑–∞–¥–∞–Ω–æ—ó URL-–∞–¥—Ä–µ—Å–∏.
- –ö–æ–¥ –≤–∏–∫–æ–Ω—É—î –∞–Ω–∞–ª—ñ–∑ —á–∞—Å—Ç–æ—Ç–∏ —Å–ª—ñ–≤ —ñ–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º MapReduce.
- –í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î —Ç–æ–ø-—Å–ª–æ–≤–∞ –∑–∞ —á–∞—Å—Ç–æ—Ç–æ—é –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è.
- –ö–æ–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –±–∞–≥–∞—Ç–æ–ø–æ—Ç–æ–∫–æ–≤—ñ—Å—Ç—å.
- –ö–æ–¥ —á–∏—Ç–∞–±–µ–ª—å–Ω–∏–π —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º PEP 8.
'''

import string
from concurrent.futures import ThreadPoolExecutor
from collections import defaultdict, Counter

import matplotlib.pyplot as plt
import requests


def get_text(url):
    #TODO –î–æ–¥–∞—Ç–∏ –æ–±—Ä–æ–±–∫—É –ø–æ–º–∏–ª–æ–∫
    try: 
        response = requests.get(url)
        response.raise_for_status()  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ–º–∏–ª–∫–∏ HTTP - response.raise_for_status(): –¶–µ–π –º–µ—Ç–æ–¥ –ø–µ—Ä–µ–≤—ñ—Ä—è—î —Å—Ç–∞—Ç—É—Å-–∫–æ–¥ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ. - –Ø–∫—â–æ —Å—Ç–∞—Ç—É—Å-–∫–æ–¥ –≤–∫–∞–∑—É—î –Ω–∞ —É—Å–ø—ñ—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 200 OK), —Ç–æ –º–µ—Ç–æ–¥ –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏—Ç—å, —ñ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä—è–¥–∫–∞. - –Ø–∫—â–æ —Å—Ç–∞—Ç—É—Å-–∫–æ–¥ –≤–∫–∞–∑—É—î –Ω–∞ –ø–æ–º–∏–ª–∫—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 404 Not Found –∞–±–æ 500 Internal Server Error), —Ç–æ —Ü–µ–π –º–µ—Ç–æ–¥ –≤–∏–∫–ª–∏–∫–∞—î –≤–∏–Ω—è—Ç–æ–∫ requests.HTTPError. –¶–µ–π –≤–∏–Ω—è—Ç–æ–∫ –±—É–¥–µ –ø–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–∏–π –±–ª–æ–∫–æ–º except, —ñ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä–Ω–µ None.
        return response.text
    except requests.RequestException as e:
        print(f'- Error of access to url: {e}')



# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–Ω–∞–∫—ñ–≤ –ø—É–Ω–∫—Ç—É–∞—Ü—ñ—ó
def remove_punctuation(text):
    return text.translate(str.maketrans("", "", string.punctuation))


def map_function(word):
    return word, 1


def shuffle_function(mapped_values):
    shuffled = defaultdict(list)
    for key, value in mapped_values:
        shuffled[key].append(value)
    return shuffled.items()

#TODO –î–æ–ø–∏—Å–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é reduce_function
def reduce_function(key_values):
    key, values = key_values
    return key, sum(values)


# –í–∏–∫–æ–Ω–∞–Ω–Ω—è MapReduce
def map_reduce(text, search_words=None):
    text = remove_punctuation(text)
    words = text.split()

    # –Ø–∫—â–æ –∑–∞–¥–∞–Ω–æ —Å–ø–∏—Å–æ–∫ —Å–ª—ñ–≤ –¥–ª—è –ø–æ—à—É–∫—É, –≤—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ —Ü—ñ —Å–ª–æ–≤–∞
    if search_words:
        words = [word for word in words if word in search_words]

    # –ö—Ä–æ–∫ 1: –í–∏–∫–æ–Ω–∞—Ç–∏ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏–π –º–∞–ø–ø—ñ–Ω–≥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤—à–∏ ThreadPoolExecutor()
    with ThreadPoolExecutor() as executor:
        mapped_values = list(executor.map(map_function, words))

    # –ö—Ä–æ–∫ 2: Shuffle
    shuffled_values = shuffle_function(mapped_values)

    # –ö—Ä–æ–∫ 3: –í–∏–∫–æ–Ω–∞—Ç–∏ –ø–∞—Ä–∞–ª–µ–ª—å–Ω—É —Ä–µ–¥—É–∫—Ü—ñ—é –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–≤—à–∏ ThreadPoolExecutor()
    with ThreadPoolExecutor() as executor:
        reduced_values = list(executor.map(reduce_function, shuffled_values))

    return dict(reduced_values)


def visualize_top_words(result, top_n=10):
    # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–æ–ø-N –Ω–∞–π—á–∞—Å—Ç—ñ—à–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–Ω–∏—Ö —Å–ª—ñ–≤
    top_words = Counter(result).most_common(top_n)  # –°–ø–∏—Å–æ–∫ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é —É –ø–æ—Ä—è–¥–∫—É —Å–ø–∞–¥–∞–Ω–Ω—è (–≤—ñ–¥ –Ω–∞–π–±—ñ–ª—å—à–æ—ó –¥–æ –Ω–∞–π–º–µ–Ω—à–æ—ó). –ê—Ä–≥—É–º–µ–Ω—Ç top_n (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 10) –≤–∫–∞–∑—É—î, —Å–∫—ñ–ª—å–∫–∏ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏. –†–µ–∑—É–ª—å—Ç–∞—Ç: –ó–º—ñ–Ω–Ω—ñ–π top_words –ø—Ä–∏—Å–≤–æ—é—î—Ç—å—Å—è —Å–ø–∏—Å–æ–∫, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: [('—Å–ª–æ–≤–æ_–ê', 50), ('—Å–ª–æ–≤–æ_–ë', 45), ('—Å–ª–æ–≤–æ_–í', 30), ...]

    # –†–æ–∑–¥—ñ–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –Ω–∞ —Å–ª–æ–≤–∞ —Ç–∞ —ó—Ö —á–∞—Å—Ç–æ—Ç–∏
    words, counts = zip(*top_words)                 # zip –ø–æ–≤–µ—Ä—Ç–∞—î —ñ—Ç–µ—Ä–∞—Ç–æ—Ä, —è–∫–∏–π –ø—ñ—Å–ª—è —Ä–æ–∑–ø–∞–∫—É–≤–∞–Ω–Ω—è –Ω–∞ –¥–≤—ñ –∑–º—ñ–Ω–Ω—ñ —Å—Ç–≤–æ—Ä—é—î: words = ('—Å–ª–æ–≤–æ_–ê', '—Å–ª–æ–≤–æ_–ë', '—Å–ª–æ–≤–æ_–í', ...); counts = (50, 45, 30, ...)

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –≥—Ä–∞—Ñ—ñ–∫–∞
    plt.figure(figsize=(10, 6))
    plt.barh(words, counts, color='skyblue')
    plt.xlabel('Frequency')
    plt.ylabel('Words')
    plt.title('Top {} Most Frequent Words'.format(top_n))
    plt.gca().invert_yaxis()  # –ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫, —â–æ–± –Ω–∞–π–±—ñ–ª—å—à—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –±—É–ª–∏ –∑–≤–µ—Ä—Ö—É
    plt.show()



if __name__ == '__main__':
    # –í—Ö—ñ–¥–Ω–∏–π —Ç–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–æ–±–∫–∏
    url = "https://gutenberg.net.au/ebooks01/0100021.txt"
    text = get_text(url)
    # –í–∏–∫–æ–Ω–∞–Ω–Ω—è MapReduce –Ω–∞ –≤—Ö—ñ–¥–Ω–æ–º—É —Ç–µ–∫—Å—Ç—ñ
    result = map_reduce(text)
    visualize_top_words(result)

    # –î–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞ —É–º–æ–≤—É –≤–∏–∫–æ–Ω–∞–Ω–Ω—è PEP8 —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ pycodestyle
    # –ü—Ä–∏–∫–ª–∞–¥ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è "pycodestyle --show-source --show-pep8 goit-cs-hw-051.py"





